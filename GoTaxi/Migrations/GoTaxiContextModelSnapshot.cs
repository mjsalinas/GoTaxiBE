// <auto-generated />
using System;
using GoTaxi.GoTaxi.API.Infraestructura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoTaxi.Migrations
{
    [DbContext(typeof(GoTaxiContext))]
    partial class GoTaxiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.RetroalimentacionModel", b =>
                {
                    b.Property<int>("IdRetroalimentacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("longtext");

                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    b.Property<double>("Puntuacion")
                        .HasColumnType("double");

                    b.HasKey("IdRetroalimentacion");

                    b.HasIndex("IdViaje");

                    b.ToTable("Retroalimentacion");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.RolesModel", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasColumnType("longtext");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.UsuariosModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contrasenia")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.VehiculosModel", b =>
                {
                    b.Property<int>("IdVehiculos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Chasis")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoAuto")
                        .HasColumnType("longtext");

                    b.Property<string>("Vehiculos")
                        .HasColumnType("longtext");

                    b.HasKey("IdVehiculos");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.ViajeTransaccionesModel", b =>
                {
                    b.Property<int>("IdViajeTransacciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    b.HasKey("IdViajeTransacciones");

                    b.HasIndex("IdViaje");

                    b.ToTable("ViajeTransacciones");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.ViajesModel", b =>
                {
                    b.Property<int>("IdViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EstadoActual")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraProgramada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdConductor")
                        .HasColumnType("int");

                    b.Property<int>("IdPasajero")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int>("NoPasajerosTotal")
                        .HasColumnType("int");

                    b.Property<string>("PuntoDestino")
                        .HasColumnType("longtext");

                    b.Property<string>("PuntoPartida")
                        .HasColumnType("longtext");

                    b.Property<double>("Tarifa")
                        .HasColumnType("double");

                    b.HasKey("IdViaje");

                    b.HasIndex("IdConductor");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("GoTaxi.GoTaxi.API.Dominio.Models.ConductoresModel", b =>
                {
                    b.Property<int>("IdConductor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contrasenia")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdConductor");

                    b.HasIndex("IdRol");

                    b.ToTable("Conductores");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.RetroalimentacionModel", b =>
                {
                    b.HasOne("GoTaxi.API.Dominio.Models.ViajesModel", "Viaje")
                        .WithMany()
                        .HasForeignKey("IdViaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.UsuariosModel", b =>
                {
                    b.HasOne("GoTaxi.API.Dominio.Models.RolesModel", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.ViajeTransaccionesModel", b =>
                {
                    b.HasOne("GoTaxi.API.Dominio.Models.ViajesModel", "Viaje")
                        .WithMany()
                        .HasForeignKey("IdViaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("GoTaxi.API.Dominio.Models.ViajesModel", b =>
                {
                    b.HasOne("GoTaxi.GoTaxi.API.Dominio.Models.ConductoresModel", "Conductor")
                        .WithMany()
                        .HasForeignKey("IdConductor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoTaxi.API.Dominio.Models.UsuariosModel", "Pasajero")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.HasOne("GoTaxi.API.Dominio.Models.VehiculosModel", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conductor");

                    b.Navigation("Pasajero");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("GoTaxi.GoTaxi.API.Dominio.Models.ConductoresModel", b =>
                {
                    b.HasOne("GoTaxi.API.Dominio.Models.RolesModel", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
